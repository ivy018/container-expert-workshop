# sign.yml
name: Sign Image
permissions:
  id-token: write
  packages: write
  contents: read
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # AWS 변수
  AWS_REGION: ap-northeast-2
  AWS_ECR_ACCOUNT_ID: 310330934744

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  release:
    permissions:
      contents: write
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Install Cosign CLI
        run: |
          wget https://github.com/sigstore/cosign/releases/download/v2.1.1/cosign_2.1.1_amd64.deb
          sudo dpkg -i cosign_2.1.1_amd64.deb
          cosign version
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'
          registries: ${{ env.AWS_ECR_ACCOUNT_ID }}

      - name: Build Image
        run: |
          cd 01_docker/04_nodejs_blue_service
          IMAGE=${{ env.AWS_ECR_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/blue-service:latest
          docker build -t $IMAGE .
          docker push $IMAGE
      - name: Sign Image
        run: |
          cosign sign \
          --key awskms:///alias/container-image-verification \
          --upload=true \
          ${{ env.AWS_ECR_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/blue-service:latest
          